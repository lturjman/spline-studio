// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type ContactDocumentDataSlicesSlice = never;

/**
 * Content for Contact documents
 */
interface ContactDocumentData {
  /**
   * Title field in *Contact*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: contact.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Slice Zone field in *Contact*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: contact.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<ContactDocumentDataSlicesSlice> /**
   * Meta Title field in *Contact*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: contact.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Contact*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: contact.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Contact*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: contact.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Contact document from Prismic
 *
 * - **API ID**: `contact`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ContactDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<ContactDocumentData>,
    "contact",
    Lang
  >;

type FilmDocumentDataSlicesSlice =
  | DossierSlice
  | CreditsSlice
  | DescriptionSlice
  | VideoSlice
  | ImageGallerySlice;

/**
 * Content for Film documents
 */
interface FilmDocumentData {
  /**
   * Title field in *Film*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: film.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Catégorie field in *Film*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: film.category
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  category: prismic.SelectField<
    | "Court métrage"
    | "Clip"
    | "Corporate"
    | "Documentaire"
    | "Pub"
    | "Pilote série"
  >;

  /**
   * image field in *Film*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: film.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * mise en avant sur la page d'accueil field in *Film*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: film.show_on_home
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/boolean
   */
  show_on_home: prismic.BooleanField;

  /**
   * Slice Zone field in *Film*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: film.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<FilmDocumentDataSlicesSlice> /**
   * Meta Title field in *Film*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: film.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Film*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: film.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Film*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: film.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Film document from Prismic
 *
 * - **API ID**: `film`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type FilmDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<FilmDocumentData>, "film", Lang>;

type FilmsDocumentDataSlicesSlice = never;

/**
 * Content for Films documents
 */
interface FilmsDocumentData {
  /**
   * Title field in *Films*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: films.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Slice Zone field in *Films*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: films.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<FilmsDocumentDataSlicesSlice> /**
   * Meta Title field in *Films*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: films.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Films*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: films.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Films*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: films.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Films document from Prismic
 *
 * - **API ID**: `films`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type FilmsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<Simplify<FilmsDocumentData>, "films", Lang>;

type HomeDocumentDataSlicesSlice = HeroSlice;

/**
 * Content for Home documents
 */
interface HomeDocumentData {
  /**
   * Title field in *Home*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: home.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * description field in *Home*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: home.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Slice Zone field in *Home*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: home.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<HomeDocumentDataSlicesSlice> /**
   * Meta Title field in *Home*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: home.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Home*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: home.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Home*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: home.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Home document from Prismic
 *
 * - **API ID**: `home`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomeDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<Simplify<HomeDocumentData>, "home", Lang>;

type SplineStudioDocumentDataSlicesSlice = VideoSlice;

/**
 * Content for Spline Studio documents
 */
interface SplineStudioDocumentData {
  /**
   * title field in *Spline Studio*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: spline_studio.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * accroche field in *Spline Studio*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: spline_studio.accroche
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  accroche: prismic.RichTextField;

  /**
   * presentation field in *Spline Studio*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: spline_studio.presentation
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  presentation: prismic.RichTextField;

  /**
   * history field in *Spline Studio*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: spline_studio.history
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  history: prismic.RichTextField;

  /**
   * Slice Zone field in *Spline Studio*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: spline_studio.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<SplineStudioDocumentDataSlicesSlice> /**
   * Meta Title field in *Spline Studio*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: spline_studio.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Spline Studio*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: spline_studio.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Spline Studio*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: spline_studio.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Spline Studio document from Prismic
 *
 * - **API ID**: `spline_studio`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SplineStudioDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<SplineStudioDocumentData>,
    "spline_studio",
    Lang
  >;

export type AllDocumentTypes =
  | ContactDocument
  | FilmDocument
  | FilmsDocument
  | HomeDocument
  | SplineStudioDocument;

/**
 * Primary content in *Credits → Default → Primary*
 */
export interface CreditsSliceDefaultPrimary {
  /**
   * crédits field in *Credits → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: credits.default.primary.credits
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  credits: prismic.RichTextField;
}

/**
 * Default variation for Credits Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CreditsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CreditsSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Credits*
 */
type CreditsSliceVariation = CreditsSliceDefault;

/**
 * Credits Shared Slice
 *
 * - **API ID**: `credits`
 * - **Description**: Credits
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CreditsSlice = prismic.SharedSlice<
  "credits",
  CreditsSliceVariation
>;

/**
 * Primary content in *Description → Default → Primary*
 */
export interface DescriptionSliceDefaultPrimary {
  /**
   * description field in *Description → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: description.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;
}

/**
 * Default variation for Description Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type DescriptionSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<DescriptionSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Description*
 */
type DescriptionSliceVariation = DescriptionSliceDefault;

/**
 * Description Shared Slice
 *
 * - **API ID**: `description`
 * - **Description**: Description
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type DescriptionSlice = prismic.SharedSlice<
  "description",
  DescriptionSliceVariation
>;

/**
 * Primary content in *Dossier → Default → Primary*
 */
export interface DossierSliceDefaultPrimary {
  /**
   * dossier field in *Dossier → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: dossier.default.primary.dossier
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  dossier: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Default variation for Dossier Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type DossierSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<DossierSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Dossier*
 */
type DossierSliceVariation = DossierSliceDefault;

/**
 * Dossier Shared Slice
 *
 * - **API ID**: `dossier`
 * - **Description**: Dossier
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type DossierSlice = prismic.SharedSlice<
  "dossier",
  DossierSliceVariation
>;

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HeroSliceDefaultPrimary {
  /**
   * eyebrowHeadline field in *Hero → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Eyebrow
   * - **API ID Path**: hero.default.primary.eyebrowHeadline
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrowHeadline: prismic.KeyTextField;

  /**
   * title field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * description field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * image field in *Hero → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * callToActionLink field in *Hero → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.callToActionLink
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  callToActionLink: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *Hero → Image Right → Primary*
 */
export interface HeroSliceImageRightPrimary {
  /**
   * eyebrowHeadline field in *Hero → Image Right → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Eyebrow
   * - **API ID Path**: hero.imageRight.primary.eyebrowHeadline
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrowHeadline: prismic.KeyTextField;

  /**
   * title field in *Hero → Image Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.imageRight.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * description field in *Hero → Image Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.imageRight.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * image field in *Hero → Image Right → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.imageRight.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * callToActionLink field in *Hero → Image Right → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.imageRight.primary.callToActionLink
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  callToActionLink: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Image Right variation for Hero Slice
 *
 * - **API ID**: `imageRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceImageRight = prismic.SharedSliceVariation<
  "imageRight",
  Simplify<HeroSliceImageRightPrimary>,
  never
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault | HeroSliceImageRight;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSlice = prismic.SharedSlice<"hero", HeroSliceVariation>;

/**
 * Primary content in *Hero2 → Default → Primary*
 */
export interface Hero2SliceDefaultPrimary {
  /**
   * eyebrowHeadline field in *Hero2 → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Eyebrow
   * - **API ID Path**: hero_2.default.primary.eyebrowHeadline
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrowHeadline: prismic.KeyTextField;

  /**
   * title field in *Hero2 → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_2.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * description field in *Hero2 → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_2.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * image field in *Hero2 → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_2.default.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * callToActionLink field in *Hero2 → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_2.default.primary.callToActionLink
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  callToActionLink: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Default variation for Hero2 Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type Hero2SliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<Hero2SliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *Hero2 → Image Right → Primary*
 */
export interface Hero2SliceImageRightPrimary {
  /**
   * eyebrowHeadline field in *Hero2 → Image Right → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Eyebrow
   * - **API ID Path**: hero_2.imageRight.primary.eyebrowHeadline
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrowHeadline: prismic.KeyTextField;

  /**
   * title field in *Hero2 → Image Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_2.imageRight.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * description field in *Hero2 → Image Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_2.imageRight.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * image field in *Hero2 → Image Right → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_2.imageRight.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * callToActionLink field in *Hero2 → Image Right → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_2.imageRight.primary.callToActionLink
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  callToActionLink: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Image Right variation for Hero2 Slice
 *
 * - **API ID**: `imageRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type Hero2SliceImageRight = prismic.SharedSliceVariation<
  "imageRight",
  Simplify<Hero2SliceImageRightPrimary>,
  never
>;

/**
 * Slice variation for *Hero2*
 */
type Hero2SliceVariation = Hero2SliceDefault | Hero2SliceImageRight;

/**
 * Hero2 Shared Slice
 *
 * - **API ID**: `hero_2`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type Hero2Slice = prismic.SharedSlice<"hero_2", Hero2SliceVariation>;

/**
 * Item in *ImageGallery → Default → Primary → imageGallery*
 */
export interface ImageGallerySliceDefaultPrimaryImagegalleryItem {
  /**
   * photo field in *ImageGallery → Default → Primary → imageGallery*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_gallery.default.primary.imagegallery[].photo
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  photo: prismic.ImageField<never>;
}

/**
 * Primary content in *ImageGallery → Default → Primary*
 */
export interface ImageGallerySliceDefaultPrimary {
  /**
   * imageGallery field in *ImageGallery → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: image_gallery.default.primary.imagegallery[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  imagegallery: prismic.GroupField<
    Simplify<ImageGallerySliceDefaultPrimaryImagegalleryItem>
  >;
}

/**
 * Default variation for ImageGallery Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ImageGallerySliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ImageGallerySliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *ImageGallery*
 */
type ImageGallerySliceVariation = ImageGallerySliceDefault;

/**
 * ImageGallery Shared Slice
 *
 * - **API ID**: `image_gallery`
 * - **Description**: ImageGallery
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ImageGallerySlice = prismic.SharedSlice<
  "image_gallery",
  ImageGallerySliceVariation
>;

/**
 * Primary content in *Video → Default → Primary*
 */
export interface VideoSliceDefaultPrimary {
  /**
   * video field in *Video → Default → Primary*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: video.default.primary.video
   * - **Documentation**: https://prismic.io/docs/fields/embed
   */
  video: prismic.EmbedField;
}

/**
 * Default variation for Video Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type VideoSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<VideoSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Video*
 */
type VideoSliceVariation = VideoSliceDefault;

/**
 * Video Shared Slice
 *
 * - **API ID**: `video`
 * - **Description**: Video
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type VideoSlice = prismic.SharedSlice<"video", VideoSliceVariation>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      ContactDocument,
      ContactDocumentData,
      ContactDocumentDataSlicesSlice,
      FilmDocument,
      FilmDocumentData,
      FilmDocumentDataSlicesSlice,
      FilmsDocument,
      FilmsDocumentData,
      FilmsDocumentDataSlicesSlice,
      HomeDocument,
      HomeDocumentData,
      HomeDocumentDataSlicesSlice,
      SplineStudioDocument,
      SplineStudioDocumentData,
      SplineStudioDocumentDataSlicesSlice,
      AllDocumentTypes,
      CreditsSlice,
      CreditsSliceDefaultPrimary,
      CreditsSliceVariation,
      CreditsSliceDefault,
      DescriptionSlice,
      DescriptionSliceDefaultPrimary,
      DescriptionSliceVariation,
      DescriptionSliceDefault,
      DossierSlice,
      DossierSliceDefaultPrimary,
      DossierSliceVariation,
      DossierSliceDefault,
      HeroSlice,
      HeroSliceDefaultPrimary,
      HeroSliceImageRightPrimary,
      HeroSliceVariation,
      HeroSliceDefault,
      HeroSliceImageRight,
      Hero2Slice,
      Hero2SliceDefaultPrimary,
      Hero2SliceImageRightPrimary,
      Hero2SliceVariation,
      Hero2SliceDefault,
      Hero2SliceImageRight,
      ImageGallerySlice,
      ImageGallerySliceDefaultPrimaryImagegalleryItem,
      ImageGallerySliceDefaultPrimary,
      ImageGallerySliceVariation,
      ImageGallerySliceDefault,
      VideoSlice,
      VideoSliceDefaultPrimary,
      VideoSliceVariation,
      VideoSliceDefault,
    };
  }
}
